{
  "name": "vscode-copilot-atlassian-chat-tool",
  "publisher": "vscode-samples",
  "displayName": "Atlassian Chat Tool",
  "description": "A unified chat tool that provides Jira and Confluence integration via language model tools for querying issue details and intelligent content search",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.95.0"
  },
  "categories": [
    "AI",
    "Chat"
  ],
  "activationEvents": [],
  "contributes": {
    "languageModelTools": [
      {
        "name": "jira-tool_getIssue",
        "tags": [
          "jira",
          "issue",
          "details"
        ],
        "toolReferenceName": "jira",
        "displayName": "Get Jira Issue",
        "modelDescription": "Get detailed information about a specific Jira issue by key (e.g., PROJ-123, TASK-456)",
        "canBeReferencedInPrompt": true,
        "icon": "$(issue-opened)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "issueKey": {
              "type": "string",
              "description": "The Jira issue key (e.g., PROJ-123, TASK-456)"
            }
          },
          "required": [
            "issueKey"
          ]
        }
      },
      {
        "name": "confluence-tool",
        "tags": [
          "confluence",
          "search",
          "intelligent",
          "context",
          "content"
        ],
        "toolReferenceName": "confluence",
        "displayName": "Search Confluence",
        "modelDescription": "Intelligently search Confluence based on paragraphs, keywords, or chat context. This tool extracts relevant keywords from natural language content and performs sophisticated searches to find related pages. Use this when the user provides context, paragraphs, or wants to find pages related to their discussion.",
        "canBeReferencedInPrompt": true,
        "icon": "$(search-fuzzy)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "content": {
              "type": "string",
              "description": "The content, paragraph, keywords, or context to search for related Confluence pages"
            },
            "context": {
              "type": "string",
              "description": "Optional additional context from chat history or related information"
            },
            "spaceKey": {
              "type": "string",
              "description": "Optional space key to limit search to a specific space"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of results to return (default: 10)",
              "minimum": 1,
              "maximum": 25
            },
            "includeContent": {
              "type": "boolean",
              "description": "Whether to include page content in results (default: true)"
            }
          },
          "required": [
            "content"
          ]
        }
      }
    ],
    "configuration": {
      "title": "Atlassian Chat Tool",
      "properties": {
        "atlassianChatTool.baseUrl": {
          "type": "string",
          "description": "Your Atlassian instance URL (e.g., https://yourcompany.atlassian.net)"
        },
        "atlassianChatTool.email": {
          "type": "string",
          "description": "Your Atlassian account email"
        },
        "atlassianChatTool.apiToken": {
          "type": "string",
          "description": "Your Atlassian API token (create one at https://id.atlassian.com/manage-profile/security/api-tokens)"
        }
      }
    }
  },
  "main": "./out/extension.js",
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "help": "echo '\nðŸ”§ Available Commands:\n' && echo '  npm run install-deps  - Install dependencies' && echo '  npm run update-deps   - Update dependencies' && echo '  npm run build         - Build extension' && echo '  npm run dev           - Start development mode (watch)' && echo '  npm run package       - Package extension for distribution' && echo '  npm run clean         - Clean build artifacts' && echo '  npm run test          - Run tests' && echo '  npm run lint          - Run linter' && echo '  npm run lint:fix      - Run linter with auto-fix' && echo '  npm run config-check  - Check extension configuration' && echo '  npm run config-set    - Set up extension configuration' && echo '  npm run install-local - Install extension locally (first time)' && echo '  npm run update-local  - Update locally installed extension' && echo '  npm run setup         - Quick development setup' && echo '  npm run ci            - Full CI pipeline' && echo ''",
    "build": "npm run compile",
    "dev": "npm run watch",
    "package": "vsce package",
    "install-deps": "npm install",
    "update-deps": "npm update",
    "clean": "rimraf out *.vsix",
    "test": "echo 'No tests specified yet'",
    "lint": "eslint src --ext ts",
    "lint:fix": "eslint src --ext ts --fix",
    "install-local": "npm run package && code --install-extension $(ls -t *.vsix | head -1)",
    "update-local": "npm run package && code --install-extension $(ls -t *.vsix | head -1) --force",
    "config-check": "echo 'Current VS Code extensions:' && code --list-extensions | grep -E '(atlassian|copilot)' || echo 'Extension not installed locally' && echo '' && echo 'Workspace settings:' && (test -f .vscode/settings.json && grep -A 5 'atlassianChatTool' .vscode/settings.json || echo 'No configuration found')",
    "config-set": "echo 'Setting up Atlassian configuration...' && mkdir -p .vscode && read -p 'Base URL (e.g., https://company.atlassian.net): ' url && read -p 'Email: ' email && read -p 'API Token: ' token && echo \"{\\n  \\\"atlassianChatTool.baseUrl\\\": \\\"$url\\\",\\n  \\\"atlassianChatTool.email\\\": \\\"$email\\\",\\n  \\\"atlassianChatTool.apiToken\\\": \\\"$token\\\"\\n}\" > .vscode/settings.json && echo 'âœ… Configuration saved to .vscode/settings.json'",
    "setup": "npm run install-deps && npm run config-set",
    "ci": "npm run clean && npm run install-deps && npm run build && npm run test"
  },
  "devDependencies": {
    "@types/vscode": "^1.95.0",
    "@types/node": "^20",
    "typescript": "^5.8.2",
    "@vscode/vsce": "^3.0.0",
    "eslint": "^8.57.0",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "rimraf": "^5.0.5"
  }
}
